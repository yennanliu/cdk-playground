apiVersion: apps/v1
kind: Deployment
metadata:
  name: ecommerce-frontend
  namespace: default
  labels:
    app: ecommerce-frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ecommerce-frontend
  template:
    metadata:
      labels:
        app: ecommerce-frontend
    spec:
      containers:
      - name: ecommerce-frontend
        image: yennanliu/shopping-cart-frontend:latest
        ports:
        - containerPort: 3000
        env:
        - name: REACT_APP_API_BASE_URL
          value: "http://ecommerce-backend-service:8080"
        - name: REACT_APP_BACKEND_URL
          value: "http://ecommerce-backend-service:8080"
        - name: PORT
          value: "3000"
        - name: NODE_ENV
          value: "production"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 15
          periodSeconds: 5
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
      volumes:
      - name: nginx-config
        configMap:
          name: frontend-nginx-config

---
apiVersion: v1
kind: Service
metadata:
  name: ecommerce-frontend-service
  namespace: default
  labels:
    app: ecommerce-frontend
spec:
  selector:
    app: ecommerce-frontend
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
  type: ClusterIP

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-nginx-config
  namespace: default
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }

    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        sendfile on;
        keepalive_timeout 65;

        upstream backend {
            server ecommerce-backend-service:8080;
        }

        server {
            listen 3000;
            server_name localhost;

            # Serve static files
            location / {
                root /usr/share/nginx/html;
                try_files $uri $uri/ /index.html;
            }

            # Proxy API requests to backend
            location /api/ {
                proxy_pass http://backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;

                # CORS headers
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;

                if ($request_method = 'OPTIONS') {
                    return 204;
                }
            }
        }
    }

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-env-config
  namespace: default
data:
  .env: |
    REACT_APP_API_BASE_URL=http://ecommerce-backend-service:8080
    REACT_APP_BACKEND_URL=http://ecommerce-backend-service:8080
    PORT=3000
    NODE_ENV=production