"use strict";var __decorate=exports&&exports.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},_a;Object.defineProperty(exports,"__esModule",{value:!0}),exports.WebSocketRoute=void 0;var jsiiDeprecationWarnings=()=>{var tmp=require("../../../.warnings.jsii.js");return jsiiDeprecationWarnings=()=>tmp,tmp};const JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti");var constructs_1=()=>{var tmp=require("constructs");return constructs_1=()=>tmp,tmp},authorizer_1=()=>{var tmp=require("./authorizer");return authorizer_1=()=>tmp,tmp},index_1=()=>{var tmp=require(".././index");return index_1=()=>tmp,tmp},core_1=()=>{var tmp=require("../../../core");return core_1=()=>tmp,tmp},errors_1=()=>{var tmp=require("../../../core/lib/errors");return errors_1=()=>tmp,tmp},metadata_resource_1=()=>{var tmp=require("../../../core/lib/metadata-resource");return metadata_resource_1=()=>tmp,tmp},prop_injectable_1=()=>{var tmp=require("../../../core/lib/prop-injectable");return prop_injectable_1=()=>tmp,tmp};let WebSocketRoute=class WebSocketRoute2 extends core_1().Resource{constructor(scope,id,props){super(scope,id);try{jsiiDeprecationWarnings().aws_cdk_lib_aws_apigatewayv2_WebSocketRouteProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,WebSocketRoute2),error}if((0,metadata_resource_1().addConstructMetadata)(this,props),props.routeKey!="$connect"&&props.authorizer)throw new(errors_1()).ValidationError("You can only set a WebSocket authorizer to a $connect route.",scope);this.webSocketApi=props.webSocketApi,this.routeKey=props.routeKey;const config=props.integration._bindToRoute({route:this,scope:this}),authBindResult=(props.authorizer??new(authorizer_1()).WebSocketNoneAuthorizer).bind({route:this,scope:this.webSocketApi instanceof constructs_1().Construct?this.webSocketApi:this}),route=new(index_1()).CfnRoute(this,"Resource",{apiId:props.webSocketApi.apiId,apiKeyRequired:props.apiKeyRequired,routeKey:props.routeKey,target:`integrations/${config.integrationId}`,authorizerId:authBindResult.authorizerId,authorizationType:authBindResult.authorizationType,routeResponseSelectionExpression:props.returnResponse?"$default":void 0});this.routeId=route.ref,props.returnResponse&&new(index_1()).CfnRouteResponse(this,"Response",{apiId:props.webSocketApi.apiId,routeId:route.ref,routeResponseKey:"$default"})}};exports.WebSocketRoute=WebSocketRoute,_a=JSII_RTTI_SYMBOL_1,WebSocketRoute[_a]={fqn:"aws-cdk-lib.aws_apigatewayv2.WebSocketRoute",version:"2.197.0"},WebSocketRoute.PROPERTY_INJECTION_ID="aws-cdk-lib.aws-apigatewayv2.WebSocketRoute",exports.WebSocketRoute=WebSocketRoute=__decorate([prop_injectable_1().propertyInjectable],WebSocketRoute);
