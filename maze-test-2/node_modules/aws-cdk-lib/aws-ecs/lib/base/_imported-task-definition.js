"use strict";var __decorate=exports&&exports.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r};Object.defineProperty(exports,"__esModule",{value:!0}),exports.ImportedTaskDefinition=void 0;var task_definition_1=()=>{var tmp=require("./task-definition");return task_definition_1=()=>tmp,tmp},core_1=()=>{var tmp=require("../../../core");return core_1=()=>tmp,tmp},metadata_resource_1=()=>{var tmp=require("../../../core/lib/metadata-resource");return metadata_resource_1=()=>tmp,tmp},prop_injectable_1=()=>{var tmp=require("../../../core/lib/prop-injectable");return prop_injectable_1=()=>tmp,tmp};let ImportedTaskDefinition=class extends core_1().Resource{constructor(scope,id,props){super(scope,id),this.executionRole=void 0,(0,metadata_resource_1().addConstructMetadata)(this,props),this.compatibility=props.compatibility??task_definition_1().Compatibility.EC2_AND_FARGATE,this.taskDefinitionArn=props.taskDefinitionArn,this.executionRole=props.executionRole,this._taskRole=props.taskRole,this._networkMode=props.networkMode}get networkMode(){if(this._networkMode==null)throw new(core_1()).ValidationError("This operation requires the networkMode in ImportedTaskDefinition to be defined. Add the 'networkMode' in ImportedTaskDefinitionProps to instantiate ImportedTaskDefinition",this);return this._networkMode}get taskRole(){if(this._taskRole==null)throw new(core_1()).ValidationError("This operation requires the taskRole in ImportedTaskDefinition to be defined. Add the 'taskRole' in ImportedTaskDefinitionProps to instantiate ImportedTaskDefinition",this);return this._taskRole}get isEc2Compatible(){return(0,task_definition_1().isEc2Compatible)(this.compatibility)}get isFargateCompatible(){return(0,task_definition_1().isFargateCompatible)(this.compatibility)}get isExternalCompatible(){return(0,task_definition_1().isExternalCompatible)(this.compatibility)}};exports.ImportedTaskDefinition=ImportedTaskDefinition,ImportedTaskDefinition.PROPERTY_INJECTION_ID="aws-cdk-lib.aws-ecs.ImportedTaskDefinition",exports.ImportedTaskDefinition=ImportedTaskDefinition=__decorate([prop_injectable_1().propertyInjectable],ImportedTaskDefinition);
