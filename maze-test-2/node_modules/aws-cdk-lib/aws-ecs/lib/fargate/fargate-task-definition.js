"use strict";var __decorate=exports&&exports.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},_a;Object.defineProperty(exports,"__esModule",{value:!0}),exports.FargateTaskDefinition=void 0;var jsiiDeprecationWarnings=()=>{var tmp=require("../../../.warnings.jsii.js");return jsiiDeprecationWarnings=()=>tmp,tmp};const JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti");var core_1=()=>{var tmp=require("../../../core");return core_1=()=>tmp,tmp},metadata_resource_1=()=>{var tmp=require("../../../core/lib/metadata-resource");return metadata_resource_1=()=>tmp,tmp},prop_injectable_1=()=>{var tmp=require("../../../core/lib/prop-injectable");return prop_injectable_1=()=>tmp,tmp},_imported_task_definition_1=()=>{var tmp=require("../base/_imported-task-definition");return _imported_task_definition_1=()=>tmp,tmp},task_definition_1=()=>{var tmp=require("../base/task-definition");return task_definition_1=()=>tmp,tmp};let FargateTaskDefinition=class FargateTaskDefinition2 extends task_definition_1().TaskDefinition{static fromFargateTaskDefinitionArn(scope,id,fargateTaskDefinitionArn){return new(_imported_task_definition_1()).ImportedTaskDefinition(scope,id,{taskDefinitionArn:fargateTaskDefinitionArn})}static fromFargateTaskDefinitionAttributes(scope,id,attrs){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_ecs_FargateTaskDefinitionAttributes(attrs)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.fromFargateTaskDefinitionAttributes),error}return new(_imported_task_definition_1()).ImportedTaskDefinition(scope,id,{taskDefinitionArn:attrs.taskDefinitionArn,compatibility:task_definition_1().Compatibility.FARGATE,networkMode:attrs.networkMode,taskRole:attrs.taskRole,executionRole:attrs.executionRole})}constructor(scope,id,props={}){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_ecs_FargateTaskDefinitionProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,FargateTaskDefinition2),error}const cpu=props.cpu??256,memoryMiB=props.memoryLimitMiB??512;if(super(scope,id,{...props,cpu:core_1().Tokenization.stringifyNumber(cpu),memoryMiB:core_1().Tokenization.stringifyNumber(memoryMiB),compatibility:task_definition_1().Compatibility.FARGATE,networkMode:task_definition_1().NetworkMode.AWS_VPC,pidMode:props.pidMode}),this.networkMode=task_definition_1().NetworkMode.AWS_VPC,(0,metadata_resource_1().addConstructMetadata)(this,props),this.cpu=cpu,this.memoryMiB=memoryMiB,props.ephemeralStorageGiB&&!core_1().Token.isUnresolved(props.ephemeralStorageGiB)&&(props.ephemeralStorageGiB<21||props.ephemeralStorageGiB>200))throw new(core_1()).ValidationError("Ephemeral storage size must be between 21GiB and 200GiB",this);if(props.pidMode){if(!props.runtimePlatform?.operatingSystemFamily)throw new(core_1()).ValidationError("Specifying 'pidMode' requires that operating system family also be provided.",this);if(props.runtimePlatform?.operatingSystemFamily?.isWindows())throw new(core_1()).ValidationError("'pidMode' is not supported for Windows containers.",this);if(!core_1().Token.isUnresolved(props.pidMode)&&props.runtimePlatform?.operatingSystemFamily?.isLinux()&&props.pidMode!==task_definition_1().PidMode.TASK)throw new(core_1()).ValidationError(`'pidMode' can only be set to '${task_definition_1().PidMode.TASK}' for Linux Fargate containers, got: '${props.pidMode}'.`,this)}this.ephemeralStorageGiB=props.ephemeralStorageGiB}};exports.FargateTaskDefinition=FargateTaskDefinition,_a=JSII_RTTI_SYMBOL_1,FargateTaskDefinition[_a]={fqn:"aws-cdk-lib.aws_ecs.FargateTaskDefinition",version:"2.197.0"},FargateTaskDefinition.PROPERTY_INJECTION_ID="aws-cdk-lib.aws-ecs.FargateTaskDefinition",exports.FargateTaskDefinition=FargateTaskDefinition=__decorate([prop_injectable_1().propertyInjectable],FargateTaskDefinition);
