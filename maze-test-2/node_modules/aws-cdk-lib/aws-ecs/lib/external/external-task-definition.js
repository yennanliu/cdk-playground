"use strict";var __decorate=exports&&exports.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},_a;Object.defineProperty(exports,"__esModule",{value:!0}),exports.ExternalTaskDefinition=void 0;var jsiiDeprecationWarnings=()=>{var tmp=require("../../../.warnings.jsii.js");return jsiiDeprecationWarnings=()=>tmp,tmp};const JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti");var core_1=()=>{var tmp=require("../../../core");return core_1=()=>tmp,tmp},metadata_resource_1=()=>{var tmp=require("../../../core/lib/metadata-resource");return metadata_resource_1=()=>tmp,tmp},prop_injectable_1=()=>{var tmp=require("../../../core/lib/prop-injectable");return prop_injectable_1=()=>tmp,tmp},_imported_task_definition_1=()=>{var tmp=require("../../lib/base/_imported-task-definition");return _imported_task_definition_1=()=>tmp,tmp},task_definition_1=()=>{var tmp=require("../base/task-definition");return task_definition_1=()=>tmp,tmp};let ExternalTaskDefinition=class ExternalTaskDefinition2 extends task_definition_1().TaskDefinition{static fromEc2TaskDefinitionArn(scope,id,externalTaskDefinitionArn){return new(_imported_task_definition_1()).ImportedTaskDefinition(scope,id,{taskDefinitionArn:externalTaskDefinitionArn})}static fromExternalTaskDefinitionAttributes(scope,id,attrs){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_ecs_ExternalTaskDefinitionAttributes(attrs)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.fromExternalTaskDefinitionAttributes),error}return new(_imported_task_definition_1()).ImportedTaskDefinition(scope,id,{taskDefinitionArn:attrs.taskDefinitionArn,compatibility:task_definition_1().Compatibility.EXTERNAL,networkMode:attrs.networkMode,taskRole:attrs.taskRole,executionRole:attrs.executionRole})}constructor(scope,id,props={}){super(scope,id,{...props,compatibility:task_definition_1().Compatibility.EXTERNAL,networkMode:props.networkMode??task_definition_1().NetworkMode.BRIDGE});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_ecs_ExternalTaskDefinitionProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,ExternalTaskDefinition2),error}(0,metadata_resource_1().addConstructMetadata)(this,props)}addInferenceAccelerator(_inferenceAccelerator){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_ecs_InferenceAccelerator(_inferenceAccelerator)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.addInferenceAccelerator),error}throw new(core_1()).ValidationError("Cannot use inference accelerators on tasks that run on External service",this)}};exports.ExternalTaskDefinition=ExternalTaskDefinition,_a=JSII_RTTI_SYMBOL_1,ExternalTaskDefinition[_a]={fqn:"aws-cdk-lib.aws_ecs.ExternalTaskDefinition",version:"2.197.0"},ExternalTaskDefinition.PROPERTY_INJECTION_ID="aws-cdk-lib.aws-ecs.ExternalTaskDefinition",__decorate([(0,metadata_resource_1().MethodMetadata)()],ExternalTaskDefinition.prototype,"addInferenceAccelerator",null),exports.ExternalTaskDefinition=ExternalTaskDefinition=__decorate([prop_injectable_1().propertyInjectable],ExternalTaskDefinition);
