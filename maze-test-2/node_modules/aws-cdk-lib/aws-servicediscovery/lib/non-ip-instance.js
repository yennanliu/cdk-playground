"use strict";var __decorate=exports&&exports.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},_a;Object.defineProperty(exports,"__esModule",{value:!0}),exports.NonIpInstance=void 0;var jsiiDeprecationWarnings=()=>{var tmp=require("../../.warnings.jsii.js");return jsiiDeprecationWarnings=()=>tmp,tmp};const JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti");var instance_1=()=>{var tmp=require("./instance");return instance_1=()=>tmp,tmp},utils_1=()=>{var tmp=require("./private/utils");return utils_1=()=>tmp,tmp},service_1=()=>{var tmp=require("./service");return service_1=()=>tmp,tmp},servicediscovery_generated_1=()=>{var tmp=require("./servicediscovery.generated");return servicediscovery_generated_1=()=>tmp,tmp},core_1=()=>{var tmp=require("../../core");return core_1=()=>tmp,tmp},metadata_resource_1=()=>{var tmp=require("../../core/lib/metadata-resource");return metadata_resource_1=()=>tmp,tmp},prop_injectable_1=()=>{var tmp=require("../../core/lib/prop-injectable");return prop_injectable_1=()=>tmp,tmp};let NonIpInstance=class NonIpInstance2 extends instance_1().InstanceBase{constructor(scope,id,props){super(scope,id);try{jsiiDeprecationWarnings().aws_cdk_lib_aws_servicediscovery_NonIpInstanceProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,NonIpInstance2),error}if((0,metadata_resource_1().addConstructMetadata)(this,props),(props.service.discoveryType||(0,utils_1().defaultDiscoveryType)(props.service.namespace))!==service_1().DiscoveryType.API)throw new(core_1()).ValidationError("This type of instance can only be registered for HTTP namespaces.",this);if(props.customAttributes===void 0||Object.keys(props.customAttributes).length===0)throw new(core_1()).ValidationError("You must specify at least one custom attribute for this instance type.",this);const resource=new(servicediscovery_generated_1()).CfnInstance(this,"Resource",{instanceId:props.instanceId||this.uniqueInstanceId(),serviceId:props.service.serviceId,instanceAttributes:{...props.customAttributes}});this.service=props.service,this.instanceId=resource.ref}};exports.NonIpInstance=NonIpInstance,_a=JSII_RTTI_SYMBOL_1,NonIpInstance[_a]={fqn:"aws-cdk-lib.aws_servicediscovery.NonIpInstance",version:"2.197.0"},NonIpInstance.PROPERTY_INJECTION_ID="aws-cdk-lib.aws-servicediscovery.NonIpInstance",exports.NonIpInstance=NonIpInstance=__decorate([prop_injectable_1().propertyInjectable],NonIpInstance);
