"use strict";var _a,_b,_c,_d,_e,_f;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnNotificationHub=exports.CfnNotificationConfiguration=exports.CfnManagedNotificationAdditionalChannelAssociation=exports.CfnManagedNotificationAccountContactAssociation=exports.CfnEventRule=exports.CfnChannelAssociation=void 0;var jsiiDeprecationWarnings=()=>{var tmp=require("../../.warnings.jsii.js");return jsiiDeprecationWarnings=()=>tmp,tmp};const JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti");var cdk=()=>{var tmp=require("../../core");return cdk=()=>tmp,tmp},cfn_parse=()=>{var tmp=require("../../core/lib/helpers-internal");return cfn_parse=()=>tmp,tmp},cdk_errors=()=>{var tmp=require("../../core/lib/errors");return cdk_errors=()=>tmp,tmp};class CfnChannelAssociation extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnChannelAssociationPropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new(cdk_errors()).ValidationError("Unexpected IResolvable",scope);const ret=new CfnChannelAssociation(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnChannelAssociation.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_notifications_CfnChannelAssociationProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnChannelAssociation),error}cdk().requireProperty(props,"arn",this),cdk().requireProperty(props,"notificationConfigurationArn",this),this.arn=props.arn,this.notificationConfigurationArn=props.notificationConfigurationArn}get cfnProperties(){return{arn:this.arn,notificationConfigurationArn:this.notificationConfigurationArn}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnChannelAssociation.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnChannelAssociationPropsToCloudFormation(props)}}exports.CfnChannelAssociation=CfnChannelAssociation,_a=JSII_RTTI_SYMBOL_1,CfnChannelAssociation[_a]={fqn:"aws-cdk-lib.aws_notifications.CfnChannelAssociation",version:"2.197.0"},CfnChannelAssociation.CFN_RESOURCE_TYPE_NAME="AWS::Notifications::ChannelAssociation";function CfnChannelAssociationPropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("arn",cdk().requiredValidator)(properties.arn)),errors.collect(cdk().propertyValidator("arn",cdk().validateString)(properties.arn)),errors.collect(cdk().propertyValidator("notificationConfigurationArn",cdk().requiredValidator)(properties.notificationConfigurationArn)),errors.collect(cdk().propertyValidator("notificationConfigurationArn",cdk().validateString)(properties.notificationConfigurationArn)),errors.wrap('supplied properties not correct for "CfnChannelAssociationProps"')}function convertCfnChannelAssociationPropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnChannelAssociationPropsValidator(properties).assertSuccess(),{Arn:cdk().stringToCloudFormation(properties.arn),NotificationConfigurationArn:cdk().stringToCloudFormation(properties.notificationConfigurationArn)}):properties}function CfnChannelAssociationPropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("arn","Arn",properties.Arn!=null?cfn_parse().FromCloudFormation.getString(properties.Arn):void 0),ret.addPropertyResult("notificationConfigurationArn","NotificationConfigurationArn",properties.NotificationConfigurationArn!=null?cfn_parse().FromCloudFormation.getString(properties.NotificationConfigurationArn):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnEventRule extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnEventRulePropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new(cdk_errors()).ValidationError("Unexpected IResolvable",scope);const ret=new CfnEventRule(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnEventRule.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_notifications_CfnEventRuleProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnEventRule),error}cdk().requireProperty(props,"eventType",this),cdk().requireProperty(props,"notificationConfigurationArn",this),cdk().requireProperty(props,"regions",this),cdk().requireProperty(props,"source",this),this.attrArn=cdk().Token.asString(this.getAtt("Arn",cdk().ResolutionTypeHint.STRING)),this.attrCreationTime=cdk().Token.asString(this.getAtt("CreationTime",cdk().ResolutionTypeHint.STRING)),this.attrManagedRules=cdk().Token.asList(this.getAtt("ManagedRules",cdk().ResolutionTypeHint.STRING_LIST)),this.attrStatusSummaryByRegion=this.getAtt("StatusSummaryByRegion"),this.eventPattern=props.eventPattern,this.eventType=props.eventType,this.notificationConfigurationArn=props.notificationConfigurationArn,this.regions=props.regions,this.source=props.source}get cfnProperties(){return{eventPattern:this.eventPattern,eventType:this.eventType,notificationConfigurationArn:this.notificationConfigurationArn,regions:this.regions,source:this.source}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnEventRule.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnEventRulePropsToCloudFormation(props)}}exports.CfnEventRule=CfnEventRule,_b=JSII_RTTI_SYMBOL_1,CfnEventRule[_b]={fqn:"aws-cdk-lib.aws_notifications.CfnEventRule",version:"2.197.0"},CfnEventRule.CFN_RESOURCE_TYPE_NAME="AWS::Notifications::EventRule";function CfnEventRuleEventRuleStatusSummaryPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("reason",cdk().requiredValidator)(properties.reason)),errors.collect(cdk().propertyValidator("reason",cdk().validateString)(properties.reason)),errors.collect(cdk().propertyValidator("status",cdk().requiredValidator)(properties.status)),errors.collect(cdk().propertyValidator("status",cdk().validateString)(properties.status)),errors.wrap('supplied properties not correct for "EventRuleStatusSummaryProperty"')}function convertCfnEventRuleEventRuleStatusSummaryPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnEventRuleEventRuleStatusSummaryPropertyValidator(properties).assertSuccess(),{Reason:cdk().stringToCloudFormation(properties.reason),Status:cdk().stringToCloudFormation(properties.status)}):properties}function CfnEventRuleEventRuleStatusSummaryPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("reason","Reason",properties.Reason!=null?cfn_parse().FromCloudFormation.getString(properties.Reason):void 0),ret.addPropertyResult("status","Status",properties.Status!=null?cfn_parse().FromCloudFormation.getString(properties.Status):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnEventRulePropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("eventPattern",cdk().validateString)(properties.eventPattern)),errors.collect(cdk().propertyValidator("eventType",cdk().requiredValidator)(properties.eventType)),errors.collect(cdk().propertyValidator("eventType",cdk().validateString)(properties.eventType)),errors.collect(cdk().propertyValidator("notificationConfigurationArn",cdk().requiredValidator)(properties.notificationConfigurationArn)),errors.collect(cdk().propertyValidator("notificationConfigurationArn",cdk().validateString)(properties.notificationConfigurationArn)),errors.collect(cdk().propertyValidator("regions",cdk().requiredValidator)(properties.regions)),errors.collect(cdk().propertyValidator("regions",cdk().listValidator(cdk().validateString))(properties.regions)),errors.collect(cdk().propertyValidator("source",cdk().requiredValidator)(properties.source)),errors.collect(cdk().propertyValidator("source",cdk().validateString)(properties.source)),errors.wrap('supplied properties not correct for "CfnEventRuleProps"')}function convertCfnEventRulePropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnEventRulePropsValidator(properties).assertSuccess(),{EventPattern:cdk().stringToCloudFormation(properties.eventPattern),EventType:cdk().stringToCloudFormation(properties.eventType),NotificationConfigurationArn:cdk().stringToCloudFormation(properties.notificationConfigurationArn),Regions:cdk().listMapper(cdk().stringToCloudFormation)(properties.regions),Source:cdk().stringToCloudFormation(properties.source)}):properties}function CfnEventRulePropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("eventPattern","EventPattern",properties.EventPattern!=null?cfn_parse().FromCloudFormation.getString(properties.EventPattern):void 0),ret.addPropertyResult("eventType","EventType",properties.EventType!=null?cfn_parse().FromCloudFormation.getString(properties.EventType):void 0),ret.addPropertyResult("notificationConfigurationArn","NotificationConfigurationArn",properties.NotificationConfigurationArn!=null?cfn_parse().FromCloudFormation.getString(properties.NotificationConfigurationArn):void 0),ret.addPropertyResult("regions","Regions",properties.Regions!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getString)(properties.Regions):void 0),ret.addPropertyResult("source","Source",properties.Source!=null?cfn_parse().FromCloudFormation.getString(properties.Source):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnManagedNotificationAccountContactAssociation extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnManagedNotificationAccountContactAssociationPropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new(cdk_errors()).ValidationError("Unexpected IResolvable",scope);const ret=new CfnManagedNotificationAccountContactAssociation(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnManagedNotificationAccountContactAssociation.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_notifications_CfnManagedNotificationAccountContactAssociationProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnManagedNotificationAccountContactAssociation),error}cdk().requireProperty(props,"contactIdentifier",this),cdk().requireProperty(props,"managedNotificationConfigurationArn",this),this.contactIdentifier=props.contactIdentifier,this.managedNotificationConfigurationArn=props.managedNotificationConfigurationArn}get cfnProperties(){return{contactIdentifier:this.contactIdentifier,managedNotificationConfigurationArn:this.managedNotificationConfigurationArn}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnManagedNotificationAccountContactAssociation.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnManagedNotificationAccountContactAssociationPropsToCloudFormation(props)}}exports.CfnManagedNotificationAccountContactAssociation=CfnManagedNotificationAccountContactAssociation,_c=JSII_RTTI_SYMBOL_1,CfnManagedNotificationAccountContactAssociation[_c]={fqn:"aws-cdk-lib.aws_notifications.CfnManagedNotificationAccountContactAssociation",version:"2.197.0"},CfnManagedNotificationAccountContactAssociation.CFN_RESOURCE_TYPE_NAME="AWS::Notifications::ManagedNotificationAccountContactAssociation";function CfnManagedNotificationAccountContactAssociationPropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("contactIdentifier",cdk().requiredValidator)(properties.contactIdentifier)),errors.collect(cdk().propertyValidator("contactIdentifier",cdk().validateString)(properties.contactIdentifier)),errors.collect(cdk().propertyValidator("managedNotificationConfigurationArn",cdk().requiredValidator)(properties.managedNotificationConfigurationArn)),errors.collect(cdk().propertyValidator("managedNotificationConfigurationArn",cdk().validateString)(properties.managedNotificationConfigurationArn)),errors.wrap('supplied properties not correct for "CfnManagedNotificationAccountContactAssociationProps"')}function convertCfnManagedNotificationAccountContactAssociationPropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnManagedNotificationAccountContactAssociationPropsValidator(properties).assertSuccess(),{ContactIdentifier:cdk().stringToCloudFormation(properties.contactIdentifier),ManagedNotificationConfigurationArn:cdk().stringToCloudFormation(properties.managedNotificationConfigurationArn)}):properties}function CfnManagedNotificationAccountContactAssociationPropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("contactIdentifier","ContactIdentifier",properties.ContactIdentifier!=null?cfn_parse().FromCloudFormation.getString(properties.ContactIdentifier):void 0),ret.addPropertyResult("managedNotificationConfigurationArn","ManagedNotificationConfigurationArn",properties.ManagedNotificationConfigurationArn!=null?cfn_parse().FromCloudFormation.getString(properties.ManagedNotificationConfigurationArn):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnManagedNotificationAdditionalChannelAssociation extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnManagedNotificationAdditionalChannelAssociationPropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new(cdk_errors()).ValidationError("Unexpected IResolvable",scope);const ret=new CfnManagedNotificationAdditionalChannelAssociation(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnManagedNotificationAdditionalChannelAssociation.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_notifications_CfnManagedNotificationAdditionalChannelAssociationProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnManagedNotificationAdditionalChannelAssociation),error}cdk().requireProperty(props,"channelArn",this),cdk().requireProperty(props,"managedNotificationConfigurationArn",this),this.channelArn=props.channelArn,this.managedNotificationConfigurationArn=props.managedNotificationConfigurationArn}get cfnProperties(){return{channelArn:this.channelArn,managedNotificationConfigurationArn:this.managedNotificationConfigurationArn}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnManagedNotificationAdditionalChannelAssociation.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnManagedNotificationAdditionalChannelAssociationPropsToCloudFormation(props)}}exports.CfnManagedNotificationAdditionalChannelAssociation=CfnManagedNotificationAdditionalChannelAssociation,_d=JSII_RTTI_SYMBOL_1,CfnManagedNotificationAdditionalChannelAssociation[_d]={fqn:"aws-cdk-lib.aws_notifications.CfnManagedNotificationAdditionalChannelAssociation",version:"2.197.0"},CfnManagedNotificationAdditionalChannelAssociation.CFN_RESOURCE_TYPE_NAME="AWS::Notifications::ManagedNotificationAdditionalChannelAssociation";function CfnManagedNotificationAdditionalChannelAssociationPropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("channelArn",cdk().requiredValidator)(properties.channelArn)),errors.collect(cdk().propertyValidator("channelArn",cdk().validateString)(properties.channelArn)),errors.collect(cdk().propertyValidator("managedNotificationConfigurationArn",cdk().requiredValidator)(properties.managedNotificationConfigurationArn)),errors.collect(cdk().propertyValidator("managedNotificationConfigurationArn",cdk().validateString)(properties.managedNotificationConfigurationArn)),errors.wrap('supplied properties not correct for "CfnManagedNotificationAdditionalChannelAssociationProps"')}function convertCfnManagedNotificationAdditionalChannelAssociationPropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnManagedNotificationAdditionalChannelAssociationPropsValidator(properties).assertSuccess(),{ChannelArn:cdk().stringToCloudFormation(properties.channelArn),ManagedNotificationConfigurationArn:cdk().stringToCloudFormation(properties.managedNotificationConfigurationArn)}):properties}function CfnManagedNotificationAdditionalChannelAssociationPropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("channelArn","ChannelArn",properties.ChannelArn!=null?cfn_parse().FromCloudFormation.getString(properties.ChannelArn):void 0),ret.addPropertyResult("managedNotificationConfigurationArn","ManagedNotificationConfigurationArn",properties.ManagedNotificationConfigurationArn!=null?cfn_parse().FromCloudFormation.getString(properties.ManagedNotificationConfigurationArn):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnNotificationConfiguration extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnNotificationConfigurationPropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new(cdk_errors()).ValidationError("Unexpected IResolvable",scope);const ret=new CfnNotificationConfiguration(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnNotificationConfiguration.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_notifications_CfnNotificationConfigurationProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnNotificationConfiguration),error}cdk().requireProperty(props,"description",this),cdk().requireProperty(props,"name",this),this.attrArn=cdk().Token.asString(this.getAtt("Arn",cdk().ResolutionTypeHint.STRING)),this.attrCreationTime=cdk().Token.asString(this.getAtt("CreationTime",cdk().ResolutionTypeHint.STRING)),this.attrStatus=cdk().Token.asString(this.getAtt("Status",cdk().ResolutionTypeHint.STRING)),this.aggregationDuration=props.aggregationDuration,this.cdkTagManager=new(cdk()).TagManager(cdk().TagType.STANDARD,"AWS::Notifications::NotificationConfiguration",void 0,{tagPropertyName:"tags"}),this.description=props.description,this.name=props.name,this.tags=props.tags}get cfnProperties(){return{aggregationDuration:this.aggregationDuration,tags:this.cdkTagManager.renderTags(this.tags),description:this.description,name:this.name}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnNotificationConfiguration.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnNotificationConfigurationPropsToCloudFormation(props)}}exports.CfnNotificationConfiguration=CfnNotificationConfiguration,_e=JSII_RTTI_SYMBOL_1,CfnNotificationConfiguration[_e]={fqn:"aws-cdk-lib.aws_notifications.CfnNotificationConfiguration",version:"2.197.0"},CfnNotificationConfiguration.CFN_RESOURCE_TYPE_NAME="AWS::Notifications::NotificationConfiguration";function CfnNotificationConfigurationPropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("aggregationDuration",cdk().validateString)(properties.aggregationDuration)),errors.collect(cdk().propertyValidator("description",cdk().requiredValidator)(properties.description)),errors.collect(cdk().propertyValidator("description",cdk().validateString)(properties.description)),errors.collect(cdk().propertyValidator("name",cdk().requiredValidator)(properties.name)),errors.collect(cdk().propertyValidator("name",cdk().validateString)(properties.name)),errors.collect(cdk().propertyValidator("tags",cdk().listValidator(cdk().validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnNotificationConfigurationProps"')}function convertCfnNotificationConfigurationPropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnNotificationConfigurationPropsValidator(properties).assertSuccess(),{AggregationDuration:cdk().stringToCloudFormation(properties.aggregationDuration),Description:cdk().stringToCloudFormation(properties.description),Name:cdk().stringToCloudFormation(properties.name),Tags:cdk().listMapper(cdk().cfnTagToCloudFormation)(properties.tags)}):properties}function CfnNotificationConfigurationPropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("aggregationDuration","AggregationDuration",properties.AggregationDuration!=null?cfn_parse().FromCloudFormation.getString(properties.AggregationDuration):void 0),ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse().FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse().FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnNotificationHub extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnNotificationHubPropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new(cdk_errors()).ValidationError("Unexpected IResolvable",scope);const ret=new CfnNotificationHub(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnNotificationHub.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_notifications_CfnNotificationHubProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnNotificationHub),error}cdk().requireProperty(props,"region",this),this.attrCreationTime=cdk().Token.asString(this.getAtt("CreationTime",cdk().ResolutionTypeHint.STRING)),this.attrNotificationHubStatusSummary=this.getAtt("NotificationHubStatusSummary"),this.region=props.region}get cfnProperties(){return{region:this.region}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnNotificationHub.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnNotificationHubPropsToCloudFormation(props)}}exports.CfnNotificationHub=CfnNotificationHub,_f=JSII_RTTI_SYMBOL_1,CfnNotificationHub[_f]={fqn:"aws-cdk-lib.aws_notifications.CfnNotificationHub",version:"2.197.0"},CfnNotificationHub.CFN_RESOURCE_TYPE_NAME="AWS::Notifications::NotificationHub";function CfnNotificationHubNotificationHubStatusSummaryPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("notificationHubStatus",cdk().requiredValidator)(properties.notificationHubStatus)),errors.collect(cdk().propertyValidator("notificationHubStatus",cdk().validateString)(properties.notificationHubStatus)),errors.collect(cdk().propertyValidator("notificationHubStatusReason",cdk().requiredValidator)(properties.notificationHubStatusReason)),errors.collect(cdk().propertyValidator("notificationHubStatusReason",cdk().validateString)(properties.notificationHubStatusReason)),errors.wrap('supplied properties not correct for "NotificationHubStatusSummaryProperty"')}function convertCfnNotificationHubNotificationHubStatusSummaryPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnNotificationHubNotificationHubStatusSummaryPropertyValidator(properties).assertSuccess(),{NotificationHubStatus:cdk().stringToCloudFormation(properties.notificationHubStatus),NotificationHubStatusReason:cdk().stringToCloudFormation(properties.notificationHubStatusReason)}):properties}function CfnNotificationHubNotificationHubStatusSummaryPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("notificationHubStatus","NotificationHubStatus",properties.NotificationHubStatus!=null?cfn_parse().FromCloudFormation.getString(properties.NotificationHubStatus):void 0),ret.addPropertyResult("notificationHubStatusReason","NotificationHubStatusReason",properties.NotificationHubStatusReason!=null?cfn_parse().FromCloudFormation.getString(properties.NotificationHubStatusReason):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnNotificationHubPropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("region",cdk().requiredValidator)(properties.region)),errors.collect(cdk().propertyValidator("region",cdk().validateString)(properties.region)),errors.wrap('supplied properties not correct for "CfnNotificationHubProps"')}function convertCfnNotificationHubPropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnNotificationHubPropsValidator(properties).assertSuccess(),{Region:cdk().stringToCloudFormation(properties.region)}):properties}function CfnNotificationHubPropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("region","Region",properties.Region!=null?cfn_parse().FromCloudFormation.getString(properties.Region):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}
