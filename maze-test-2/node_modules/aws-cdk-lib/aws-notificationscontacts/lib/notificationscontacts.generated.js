"use strict";var _a;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnEmailContact=void 0;var jsiiDeprecationWarnings=()=>{var tmp=require("../../.warnings.jsii.js");return jsiiDeprecationWarnings=()=>tmp,tmp};const JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti");var cdk=()=>{var tmp=require("../../core");return cdk=()=>tmp,tmp},cfn_parse=()=>{var tmp=require("../../core/lib/helpers-internal");return cfn_parse=()=>tmp,tmp},cdk_errors=()=>{var tmp=require("../../core/lib/errors");return cdk_errors=()=>tmp,tmp};class CfnEmailContact extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnEmailContactPropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new(cdk_errors()).ValidationError("Unexpected IResolvable",scope);const ret=new CfnEmailContact(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnEmailContact.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_notificationscontacts_CfnEmailContactProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnEmailContact),error}cdk().requireProperty(props,"emailAddress",this),cdk().requireProperty(props,"name",this),this.attrArn=cdk().Token.asString(this.getAtt("Arn",cdk().ResolutionTypeHint.STRING)),this.attrEmailContact=this.getAtt("EmailContact"),this.attrEmailContactAddress=cdk().Token.asString(this.getAtt("EmailContact.Address",cdk().ResolutionTypeHint.STRING)),this.attrEmailContactArn=cdk().Token.asString(this.getAtt("EmailContact.Arn",cdk().ResolutionTypeHint.STRING)),this.attrEmailContactCreationTime=cdk().Token.asString(this.getAtt("EmailContact.CreationTime",cdk().ResolutionTypeHint.STRING)),this.attrEmailContactName=cdk().Token.asString(this.getAtt("EmailContact.Name",cdk().ResolutionTypeHint.STRING)),this.attrEmailContactStatus=cdk().Token.asString(this.getAtt("EmailContact.Status",cdk().ResolutionTypeHint.STRING)),this.attrEmailContactUpdateTime=cdk().Token.asString(this.getAtt("EmailContact.UpdateTime",cdk().ResolutionTypeHint.STRING)),this.cdkTagManager=new(cdk()).TagManager(cdk().TagType.STANDARD,"AWS::NotificationsContacts::EmailContact",void 0,{tagPropertyName:"tags"}),this.emailAddress=props.emailAddress,this.name=props.name,this.tags=props.tags}get cfnProperties(){return{tags:this.cdkTagManager.renderTags(this.tags),emailAddress:this.emailAddress,name:this.name}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnEmailContact.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnEmailContactPropsToCloudFormation(props)}}exports.CfnEmailContact=CfnEmailContact,_a=JSII_RTTI_SYMBOL_1,CfnEmailContact[_a]={fqn:"aws-cdk-lib.aws_notificationscontacts.CfnEmailContact",version:"2.197.0"},CfnEmailContact.CFN_RESOURCE_TYPE_NAME="AWS::NotificationsContacts::EmailContact";function CfnEmailContactEmailContactPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("address",cdk().requiredValidator)(properties.address)),errors.collect(cdk().propertyValidator("address",cdk().validateString)(properties.address)),errors.collect(cdk().propertyValidator("arn",cdk().requiredValidator)(properties.arn)),errors.collect(cdk().propertyValidator("arn",cdk().validateString)(properties.arn)),errors.collect(cdk().propertyValidator("creationTime",cdk().requiredValidator)(properties.creationTime)),errors.collect(cdk().propertyValidator("creationTime",cdk().validateString)(properties.creationTime)),errors.collect(cdk().propertyValidator("name",cdk().requiredValidator)(properties.name)),errors.collect(cdk().propertyValidator("name",cdk().validateString)(properties.name)),errors.collect(cdk().propertyValidator("status",cdk().requiredValidator)(properties.status)),errors.collect(cdk().propertyValidator("status",cdk().validateString)(properties.status)),errors.collect(cdk().propertyValidator("updateTime",cdk().requiredValidator)(properties.updateTime)),errors.collect(cdk().propertyValidator("updateTime",cdk().validateString)(properties.updateTime)),errors.wrap('supplied properties not correct for "EmailContactProperty"')}function convertCfnEmailContactEmailContactPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnEmailContactEmailContactPropertyValidator(properties).assertSuccess(),{Address:cdk().stringToCloudFormation(properties.address),Arn:cdk().stringToCloudFormation(properties.arn),CreationTime:cdk().stringToCloudFormation(properties.creationTime),Name:cdk().stringToCloudFormation(properties.name),Status:cdk().stringToCloudFormation(properties.status),UpdateTime:cdk().stringToCloudFormation(properties.updateTime)}):properties}function CfnEmailContactEmailContactPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("address","Address",properties.Address!=null?cfn_parse().FromCloudFormation.getString(properties.Address):void 0),ret.addPropertyResult("arn","Arn",properties.Arn!=null?cfn_parse().FromCloudFormation.getString(properties.Arn):void 0),ret.addPropertyResult("creationTime","CreationTime",properties.CreationTime!=null?cfn_parse().FromCloudFormation.getString(properties.CreationTime):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse().FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("status","Status",properties.Status!=null?cfn_parse().FromCloudFormation.getString(properties.Status):void 0),ret.addPropertyResult("updateTime","UpdateTime",properties.UpdateTime!=null?cfn_parse().FromCloudFormation.getString(properties.UpdateTime):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnEmailContactPropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("emailAddress",cdk().requiredValidator)(properties.emailAddress)),errors.collect(cdk().propertyValidator("emailAddress",cdk().validateString)(properties.emailAddress)),errors.collect(cdk().propertyValidator("name",cdk().requiredValidator)(properties.name)),errors.collect(cdk().propertyValidator("name",cdk().validateString)(properties.name)),errors.collect(cdk().propertyValidator("tags",cdk().listValidator(cdk().validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnEmailContactProps"')}function convertCfnEmailContactPropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnEmailContactPropsValidator(properties).assertSuccess(),{EmailAddress:cdk().stringToCloudFormation(properties.emailAddress),Name:cdk().stringToCloudFormation(properties.name),Tags:cdk().listMapper(cdk().cfnTagToCloudFormation)(properties.tags)}):properties}function CfnEmailContactPropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("emailAddress","EmailAddress",properties.EmailAddress!=null?cfn_parse().FromCloudFormation.getString(properties.EmailAddress):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse().FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}
