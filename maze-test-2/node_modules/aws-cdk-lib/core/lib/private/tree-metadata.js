"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.TreeMetadata=void 0;var fs=()=>{var tmp=require("fs");return fs=()=>tmp,tmp},path=()=>{var tmp=require("path");return path=()=>tmp,tmp},constructs_1=()=>{var tmp=require("constructs");return constructs_1=()=>tmp,tmp},runtime_info_1=()=>{var tmp=require("./runtime-info");return runtime_info_1=()=>tmp,tmp},cloud_assembly_schema_1=()=>{var tmp=require("../../../cloud-assembly-schema");return cloud_assembly_schema_1=()=>tmp,tmp},annotations_1=()=>{var tmp=require("../annotations");return annotations_1=()=>tmp,tmp},stack_1=()=>{var tmp=require("../stack");return stack_1=()=>tmp,tmp},tree_1=()=>{var tmp=require("../tree");return tree_1=()=>tmp,tmp};const FILE_PATH="tree.json";class TreeMetadata extends constructs_1().Construct{constructor(scope){super(scope,"Tree")}_synthesizeTree(session){const lookup={},visit=construct=>{const childrenMap=construct.node.children.map(c=>{try{return visit(c)}catch(e){annotations_1().Annotations.of(this).addWarningV2(`@aws-cdk/core:failedToRenderTreeMetadata-${c.node.id}`,`Failed to render tree metadata for node [${c.node.id}]. Reason: ${e}`);return}}).filter(child=>child!==void 0).reduce((map,child)=>Object.assign(map,{[child.id]:child}),{}),node={id:construct.node.id||"App",path:construct.node.path,children:Object.keys(childrenMap).length===0?void 0:childrenMap,attributes:this.synthAttributes(construct),constructInfo:(0,runtime_info_1().constructInfoFromConstruct)(construct)};return lookup[node.path]=node,node},tree={version:"tree-0.1",tree:visit(this.node.root)},builder=session.assembly;fs().writeFileSync(path().join(builder.outdir,FILE_PATH),JSON.stringify(tree),{encoding:"utf-8"}),builder.addArtifact("Tree",{type:cloud_assembly_schema_1().ArtifactType.CDK_TREE,properties:{file:FILE_PATH}})}synthAttributes(construct){function canInspect(inspectable){return inspectable.inspect!==void 0}const inspector=new(tree_1()).TreeInspector;if(canInspect(construct))return construct.inspect(inspector),stack_1().Stack.of(construct).resolve(inspector.attributes)}}exports.TreeMetadata=TreeMetadata;
