"use strict";var __decorate=exports&&exports.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},_a,KeyPair_1;Object.defineProperty(exports,"__esModule",{value:!0}),exports.KeyPair=exports.KeyPairType=exports.KeyPairFormat=void 0;var jsiiDeprecationWarnings=()=>{var tmp=require("../../.warnings.jsii.js");return jsiiDeprecationWarnings=()=>tmp,tmp};const JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti");var ec2_generated_1=()=>{var tmp=require("./ec2.generated");return ec2_generated_1=()=>tmp,tmp},machine_image_1=()=>{var tmp=require("./machine-image");return machine_image_1=()=>tmp,tmp},aws_ssm_1=()=>{var tmp=require("../../aws-ssm");return aws_ssm_1=()=>tmp,tmp},core_1=()=>{var tmp=require("../../core");return core_1=()=>tmp,tmp},metadata_resource_1=()=>{var tmp=require("../../core/lib/metadata-resource");return metadata_resource_1=()=>tmp,tmp},prop_injectable_1=()=>{var tmp=require("../../core/lib/prop-injectable");return prop_injectable_1=()=>tmp,tmp},KeyPairFormat;(function(KeyPairFormat2){KeyPairFormat2.PPK="ppk",KeyPairFormat2.PEM="pem"})(KeyPairFormat||(exports.KeyPairFormat=KeyPairFormat={}));var KeyPairType;(function(KeyPairType2){KeyPairType2.RSA="rsa",KeyPairType2.ED25519="ed25519"})(KeyPairType||(exports.KeyPairType=KeyPairType={}));let KeyPair=KeyPair_1=class KeyPair2 extends core_1().Resource{static fromKeyPairName(scope,id,keyPairName){return KeyPair_1.fromKeyPairAttributes(scope,id,{keyPairName})}static fromKeyPairAttributes(scope,id,attrs){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_ec2_KeyPairAttributes(attrs)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.fromKeyPairAttributes),error}class Import extends core_1().Resource{constructor(){super(scope,id),this.keyPairName=attrs.keyPairName,this.type=attrs.type}_isOsCompatible(osType){switch(this.type){case KeyPairType.ED25519:return osType!==machine_image_1().OperatingSystemType.WINDOWS;case KeyPairType.RSA:return!0;default:return!0}}}return new Import}constructor(scope,id,props){super(scope,id,{...props,physicalName:props?.keyPairName??core_1().Lazy.string({produce:()=>core_1().Names.uniqueResourceName(this,{maxLength:255})})});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_ec2_KeyPairProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,KeyPair2),error}if((0,metadata_resource_1().addConstructMetadata)(this,props),props?.publicKeyMaterial&&props?.type)throw new(core_1()).ValidationError("Cannot specify 'type' for keys with imported material",this);this._isImport=!!props?.publicKeyMaterial;const keyType=props?.type??KeyPairType.RSA,keyFormat=props?.format??KeyPairFormat.PEM,cfnResource=new(ec2_generated_1()).CfnKeyPair(this,"Resource",{keyName:this.physicalName,keyType:props?.type??KeyPairType.RSA,keyFormat:props?.format??KeyPairFormat.PEM,publicKeyMaterial:props?.publicKeyMaterial});this.keyPairName=cfnResource.ref,this.keyPairFingerprint=cfnResource.attrKeyFingerprint,this.keyPairId=cfnResource.attrKeyPairId,this.type=keyType,this.format=keyFormat}get hasImportedMaterial(){return this._isImport}get privateKey(){if(this._isImport)throw new(core_1()).ValidationError("An SSM parameter with private key material is not created for imported keys",this);return this._privateKeySsm||(this._privateKeySsm=aws_ssm_1().StringParameter.fromSecureStringParameterAttributes(this,"PrivateKeyParameter",{parameterName:`/ec2/keypair/${this.keyPairId}`,simpleName:!1})),this._privateKeySsm}_isOsCompatible(osType){switch(this.type){case KeyPairType.ED25519:return osType!==machine_image_1().OperatingSystemType.WINDOWS;case KeyPairType.RSA:return!0;default:return!0}}};exports.KeyPair=KeyPair,_a=JSII_RTTI_SYMBOL_1,KeyPair[_a]={fqn:"aws-cdk-lib.aws_ec2.KeyPair",version:"2.197.0"},KeyPair.PROPERTY_INJECTION_ID="aws-cdk-lib.aws-ec2.KeyPair",exports.KeyPair=KeyPair=KeyPair_1=__decorate([prop_injectable_1().propertyInjectable],KeyPair);
