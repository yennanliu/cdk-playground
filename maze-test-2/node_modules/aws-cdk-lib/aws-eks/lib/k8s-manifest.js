"use strict";var __decorate=exports&&exports.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},_a,KubernetesManifest_1;Object.defineProperty(exports,"__esModule",{value:!0}),exports.KubernetesManifest=void 0;var jsiiDeprecationWarnings=()=>{var tmp=require("../../.warnings.jsii.js");return jsiiDeprecationWarnings=()=>tmp,tmp};const JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti");var constructs_1=()=>{var tmp=require("constructs");return constructs_1=()=>tmp,tmp},alb_controller_1=()=>{var tmp=require("./alb-controller");return alb_controller_1=()=>tmp,tmp},kubectl_provider_1=()=>{var tmp=require("./kubectl-provider");return kubectl_provider_1=()=>tmp,tmp},core_1=()=>{var tmp=require("../../core");return core_1=()=>tmp,tmp},prop_injectable_1=()=>{var tmp=require("../../core/lib/prop-injectable");return prop_injectable_1=()=>tmp,tmp};const PRUNE_LABEL_PREFIX="aws.cdk.eks/prune-";let KubernetesManifest=KubernetesManifest_1=class KubernetesManifest2 extends constructs_1().Construct{constructor(scope,id,props){super(scope,id);try{jsiiDeprecationWarnings().aws_cdk_lib_aws_eks_KubernetesManifestProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,KubernetesManifest2),error}const stack=core_1().Stack.of(this),provider=kubectl_provider_1().KubectlProvider.getOrCreate(this,props.cluster),pruneLabel=props.prune??props.cluster.prune?this.injectPruneLabel(props.manifest):void 0;(props.ingressAlb??!1)&&this.injectIngressAlbAnnotations(props.manifest,props.ingressAlbScheme??alb_controller_1().AlbScheme.INTERNAL);const customResource=new(core_1()).CustomResource(this,"Resource",{serviceToken:provider.serviceToken,resourceType:KubernetesManifest_1.RESOURCE_TYPE,properties:{Manifest:stack.toJsonString(props.manifest),ClusterName:props.cluster.clusterName,RoleArn:provider.roleArn,PruneLabel:pruneLabel,Overwrite:props.overwrite,SkipValidation:props.skipValidation}});this.node.defaultChild=customResource.node.defaultChild}injectPruneLabel(manifest){const pruneLabel=PRUNE_LABEL_PREFIX+constructs_1().Node.of(this).addr;for(const resource of manifest)typeof resource!="object"||!resource.kind||(resource.metadata||(resource.metadata={}),resource.metadata.labels||(resource.metadata.labels={}),resource.metadata.labels={[pruneLabel]:"",...resource.metadata.labels});return pruneLabel}injectIngressAlbAnnotations(manifest,scheme){for(const resource of manifest)typeof resource!="object"||!resource.kind||resource.kind==="Ingress"&&(resource.metadata.annotations={"kubernetes.io/ingress.class":"alb","alb.ingress.kubernetes.io/scheme":scheme,...resource.metadata.annotations})}};exports.KubernetesManifest=KubernetesManifest,_a=JSII_RTTI_SYMBOL_1,KubernetesManifest[_a]={fqn:"aws-cdk-lib.aws_eks.KubernetesManifest",version:"2.197.0"},KubernetesManifest.PROPERTY_INJECTION_ID="aws-cdk-lib.aws-eks.KubernetesManifest",KubernetesManifest.RESOURCE_TYPE="Custom::AWSCDK-EKS-KubernetesResource",exports.KubernetesManifest=KubernetesManifest=KubernetesManifest_1=__decorate([prop_injectable_1().propertyInjectable],KubernetesManifest);
